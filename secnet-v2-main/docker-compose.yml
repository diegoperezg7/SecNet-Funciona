version: '3.8'

services:
  suricata:
    build: ./suricata
    container_name: suricata
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - ./suricata/suricata.yaml:/etc/suricata/suricata.yaml:ro
      - ./suricata/rules/local.rules:/etc/suricata/rules/local.rules:ro
      - ./logs:/var/log/suricata
      - /etc/localtime:/etc/localtime:ro
    command: ["/usr/bin/suricata", "-c", "/etc/suricata/suricata.yaml", "-i", "eth0"]
    restart: unless-stopped
  python-responder:
    build: ./python-responder
    container_name: python-responder
    user: "root"  # Necesitamos ser root para modificar iptables
    network_mode: "host"  # Necesario para modificar iptables del host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_ADMIN
    volumes:
      - ./logs:/var/log/suricata:ro
      - ./python-responder:/app
      - ./database:/app/database
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/iptables:/etc/iptables:rw  # Para persistir reglas de iptables
    environment:
      - IPTABLES_SAVE_ON_STOP=1
      - IPTABLES_SAVE_ON_RESTART=1
      - PYTHONUNBUFFERED=1
    tmpfs:
      - /run
      - /run/lock
    security_opt:
      - apparmor:unconfined
      - seccomp=unconfined
    working_dir: /app
    command: ["/bin/sh", "/app/startup.sh"]
    depends_on:
      - suricata
    restart: unless-stopped

  web-interface:
    build: ./web-interface
    container_name: web-interface
    networks:
      - incident-network
    ports:
      - "8080:80"
    volumes:
      # CÃ³digo PHP de la interfaz
      - ./web-interface:/var/www/html
      # BD para que la web lea alertas
      - ./database:/var/www/html/database
      # Acceso a logs (opcional, p.ej. para descargas)
      - ./logs:/var/www/html/logs:ro
    depends_on:
      - suricata
      - python-responder
    restart: unless-stopped

networks:
  incident-network:
    driver: bridge
